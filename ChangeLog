2004-11-05 Alasdair Allan <aa@astro.ex.ac.uk>

        * Added some jach_agent.pl code from 2nd generation work, mostly ported
          this code to third generation framework. Problems with the %running
          hash. Need to share the %running hash across threads, and then use
          an eSTAR::Running object to access a reference to this hash perhaps?

2004-02-20 Alasdair Allan <aa@astro.ex.ac.uk>

        * Added freeze(), thaw() and melt() functions for arbitary objects 
	  being serialised to the ~/.estar/$process/state/ directory. 
	  
	* Added set_state() and get_state() functions to allow access to the
	  state.dat file as well as the options.dat file to which access was
	  provided yesterday with the get_option() and set_option() methods.
	  
	* Moved all the options/state querying to eSTAR::Util and put wrapper
	  methods into the Handler classes only.
	  
	* Wrote a datamining_client.pl script which pushes a VOTable file to
	  the data_miner.pl process, along with a host:port to reply to and
	  context ID. This script runs up a "fake" wfcam_agent server for the
	  data_miner.pl to reply to after it has processed the pushed file if
	  a command line switch is given, otherwise you need to have the
	  the data_miner.pl and wfcam_agent.pl running.
	  
	* Added a handle_objects() method to the data_miner.pl, this should  
	  return immediately with an ACK to the client/agent calling it saying
	  that everything is okay, and then return its results in an async
	  manner using threads.
	  
	* Made eSTAR::Util use EXPORT_OK rather than EXPORT and fixed the
	  class method calls (hopefully) to reflect this change.        
	  
	* Added handle_results() method to the wfcam_agent.pl. This will
	  handle results returned by the data_miner.pl.
	    
2004-02-19 Alasdair Allan <aa@astro.ex.ac.uk>

        * Got ping() and echo() working for wfcam_agent.pl. Fixed the breaks
	  in encapsulation present from the 2nd generation code by making 
	  eSTAR::Process and eSTAR::Logging single instance objects.

        * Added a data mining process, carbon copy of the wfcam_agant.pl
	  code with configurations changed. Need to find some way to grab
	  some meta-classes from this so that the 4th generation stuff can
	  actually be easier to write than is currently the case.
	
	* Added a client to generate a VOTable catalogue for a given radius
	  around a given target. Used for deubgging and development of the
	  WFCAM agent and Data Mining Daemon.
	
	* Default options are now generated on first program run only, and
	  the SOAP server has get and set methods exposed to change these.
	      	  
2004-02-18 Alasdair Allan <aa@astro.ex.ac.uk>

        * Inital skeleton installation of the WFCAM survey_agent.pl 
          built. This package is going to be the first 3rd generation
          agent built for the eSTAR project. Initally it should talk
          to the current user_agent.pl and the rest of the 2nd generation
          code, but if Robonet-1.0 goes ahead we'll need to refactor
          the top level User Agent code as it's not robust enough for
          general distribution to astronomers.
          
